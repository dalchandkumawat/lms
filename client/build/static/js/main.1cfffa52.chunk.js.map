{"version":3,"sources":["components/Navbar.js","components/Signin.js","components/Signup.js","components/Profile.js","components/Students.js","components/Overview.js","components/Home.js","reducers/userReducer.js","components/AddClass.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useContext","UserContext","state","dispatch","history","useHistory","className","onClick","push","style","cursor","fontFamily","id","to","localStorage","clear","type","Signin","useState","phonenumber","setPhoneNumber","showOtp","setShowOtp","otp","setOtp","textAlign","value","onChange","e","target","htmlFor","disabled","length","fetch","method","headers","body","JSON","stringify","then","res","json","result","error","M","toast","html","classes","setItem","token","user","payload","catch","err","console","log","Signup","name","setName","email","setEmail","usertype","setUserType","marginBottom","checked","Profile","Students","props","students","setStudents","useEffect","getItem","map","item","key","_id","items","document","getElementsByName","studentsArray","i","profileId","Overview","location","pathname","substring","indexOf","setId","subject","setSubject","instructorName","setInstructorName","fromTime","setFromTime","toTime","setToTime","noOfStudents","setNoOfStudents","daysOfClass","setDaysOfClass","showStudents","setShowStudents","class","instructorname","count","marginTop","data-target","message","Home","setClasses","nameSorted","setNameSorted","subjectSorted","setSubjectSorted","callSort","sortBy","Array","from","sort","a","b","toLowerCase","localeCompare","reverse","tempClasses","toLink","classClicked","reducer","action","AddClass","daysChange","setDaysChange","isEdit","classActive","setClassActive","split","trim","classId","createContext","Routing","parse","exact","path","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1cfffa52.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../App';\r\nconst Navbar = () => {\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const history = useHistory();\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper #ba68c8 purple lighten-2\">\r\n                <span className=\"brand-logo1\" onClick={()=>history.push('/')} style={{cursor:\"pointer\",fontFamily:\"'Alegreya', serif\"}}>LMS</span>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                    {\r\n                        state ? <><li><Link to='/profile'>Profile</Link></li><li>\r\n                            <a\r\n                                onClick={() => {\r\n                                    localStorage.clear();\r\n                                    dispatch({ type: \"CLEAR\" });\r\n                                    history.push('/signin');\r\n                                }}\r\n                            >Logout\r\n                            </a>\r\n                            </li>\r\n                            </> : \"\"\r\n                    }\r\n                    {\r\n                        state ? \"\" : <><li><Link to='/signin'>Signin</Link></li><li><Link to='/signup'>Signup</Link></li></>\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../App';\r\nimport M from 'materialize-css';\r\nconst Signin = () => {\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const history = useHistory();\r\n    const [phonenumber, setPhoneNumber] = useState(\"\");\r\n    const [showOtp, setShowOtp] = useState(false);\r\n    const [otp, setOtp] = useState(\"\");\r\n    const getOtpClick = () => {\r\n        fetch('/signin', {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                phonenumber\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                if (result.error) {\r\n                    M.toast({ html: result.error, classes: \"#c62727 red darken-3\" });\r\n                }\r\n                else {\r\n                    setShowOtp(true);\r\n                }\r\n            })\r\n    }\r\n    const signinClick = () => {\r\n        fetch('/verifyotp', {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                phonenumber, otp\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                if (result.error) {\r\n                    M.toast({ html: result.error, classes: \"#c62727 red darken-3\" });\r\n                }\r\n                else {\r\n                    localStorage.setItem('jwt', result.token);\r\n                    localStorage.setItem('user', JSON.stringify(result.user));\r\n                    dispatch({ type: \"USER\", payload: result.user });\r\n                    M.toast({ html: \"Signin successful\", classes: \"#43a047 green darken-1\" })\r\n                    history.push('/');\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"content authcontent\">\r\n                <div className=\"row\">\r\n                    <form className=\"col s12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 text-center\">\r\n                                <h3 style={{ textAlign: \"center\" }}>Signin</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"phonenumber\" type=\"text\" value={phonenumber} onChange={(e) => setPhoneNumber(e.target.value)}></input>\r\n                                <label htmlFor=\"phonenumber\">Mobile Number</label>\r\n                            </div>\r\n                        </div>\r\n                        {!showOtp ?\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12 rightAlign\">\r\n                                    <button className=\"btn waves-effect waves-light\" type=\"button\" disabled={phonenumber.length<10} onClick={getOtpClick}>Get OTP\r\n                            <i className=\"material-icons right\">mail</i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            : null}\r\n                        {showOtp ? <>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12\">\r\n                                    <input id=\"otp\" type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)}></input>\r\n                                    <label htmlFor=\"otp\">Enter 6 digit OTP</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"input-field col s12 rightAlign\">\r\n                                    <button className=\"btn waves-effect waves-light\" type=\"button\" disabled={otp.length!=6} onClick={signinClick}>Sign IN\r\n                                    <i className=\"material-icons right\">lock</i>\r\n                                    </button>\r\n                                </div>\r\n                            </div></>\r\n                            : null}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Signin;","import React, { useState,useContext } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../App';\r\nimport M from 'materialize-css';\r\nconst Signup = () => {\r\n    const {state,dispatch}=useContext(UserContext);\r\n    const history=useHistory();\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [usertype, setUserType] = useState(\"\");\r\n    const [phonenumber, setPhoneNumber] = useState(\"\");\r\n    const [otp, setOtp] = useState(\"\");\r\n    const [showOtp, setShowOtp] = useState(false);\r\n    const getOtpClick=()=>{\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,email,usertype,phonenumber\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            if(result.error){\r\n                M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n            }\r\n            else{\r\n                setShowOtp(true);\r\n            }\r\n        })\r\n    }\r\n    const signupClick=()=>{\r\n        fetch('/verifyotp',{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                phonenumber,otp\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            if(result.error){\r\n                M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n            }\r\n            else{                \r\n                localStorage.setItem('jwt',result.token);\r\n                localStorage.setItem('user',JSON.stringify(result.user));\r\n                dispatch({type:\"USER\",payload:result.user});\r\n                M.toast({html:\"Signup successful\",classes:\"#43a047 green darken-1\"})\r\n                history.push('/');\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"content authcontent\">\r\n                <div className=\"row\">\r\n                    <form className=\"col s12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 text-center\">\r\n                                <h3 style={{ textAlign: \"center\" }}>Signup</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"name\" type=\"text\" value={name} className=\"validate\" onChange={(e) => setName(e.target.value)}></input>\r\n                                <label htmlFor=\"name\">Name</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"email\" type=\"email\" value={email} className=\"validate\" onChange={(e) => setEmail(e.target.value)}></input>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" style={{marginBottom:\"3rem\"}}>\r\n                            <div className=\"input-field col s6 input-field-with-margin-bottom\">\r\n                                <label>\r\n                                    <input name=\"usertype\" type=\"radio\" onChange={(e)=>setUserType(\"Student\")} checked={usertype=='Student'}/>\r\n                                    <span>Student</span>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"input-field col s6 input-field-with-margin-bottom\">\r\n                                <label>\r\n                                    <input name=\"usertype\" type=\"radio\" onChange={(e)=>setUserType(\"Teacher\")} checked={usertype=='Teacher'}/>\r\n                                    <span>Teacher</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"phonenumber\" type=\"text\" value={phonenumber} className=\"validate\" onChange={(e) => setPhoneNumber(e.target.value)}></input>\r\n                                <label htmlFor=\"phonenumber\">Mobile Number</label>\r\n                            </div>\r\n                        </div>\r\n                        {!showOtp?\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12 rightAlign\">\r\n                                <button className=\"btn waves-effect waves-light\" type=\"button\" disabled={phonenumber.length<10 || name.length==0 || usertype==\"\"} onClick={getOtpClick}>Get OTP\r\n                                    <i className=\"material-icons right\">mail</i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        :null}                        \r\n                        {showOtp?\r\n                        <>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"otp\" type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)}></input>\r\n                                <label htmlFor=\"otp\">Enter 6 digit OTP</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12 rightAlign\">\r\n                                <button className=\"btn waves-effect waves-light\" type=\"button\" onClick={signupClick} disabled={otp.length!=6} name=\"action\">Sign UP\r\n                                    <i className=\"material-icons right\">lock</i>\r\n                                </button>\r\n                            </div>\r\n                        </div>                        \r\n                        </>:null}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Signup;","import React,{useContext} from 'react';\r\nimport {UserContext} from '../App';\r\nconst Profile = () => {\r\n    const {state,dispatch}=useContext(UserContext);\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 text-center\">\r\n                        <h3 style={{ textAlign: \"center\" }}>Profile</h3>\r\n                    </div>\r\n                </div>\r\n                <table className=\"highlight\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>{state?state.name:\"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Email</td>\r\n                            <td>{state?state.email:\"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Mobile Number</td>\r\n                            <td>{state?state.phonenumber:\"\"}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>User Type</td>\r\n                            <td>{state?state.usertype:\"\"}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React,{useEffect,useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nconst Students = (props) => {\r\n    const [students,setStudents]=useState([]);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        fetch('/getStudents',{\r\n            method:\"get\",\r\n            headers:{\r\n                \"authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{            \r\n            if(result.error){\r\n                M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n            }\r\n            else{\r\n                if(result){\r\n                    setStudents(result.students);\r\n                }\r\n            }\r\n        })\r\n    },[])\r\n    const addClick = () => {\r\n        var items = document.getElementsByName('students');\r\n        var selectedItems = \"\";\r\n        for (var i = 0; i < items.length; i++) {\r\n            if (items[i].type == 'checkbox' && items[i].checked == true)\r\n                selectedItems += items[i].value + \"\\n\";\r\n        }\r\n        alert(selectedItems);\r\n    }\r\n    return (\r\n        <div>\r\n            {students.map(item=>{   \r\n                return (             \r\n                    <div key={item._id}>\r\n                        <label>\r\n                            <input type=\"checkbox\" className=\"filled-in\" name=\"students\" value={item._id}/>\r\n                            <span>{item.name}</span>\r\n                        </label>\r\n                    </div>\r\n                )\r\n            })\r\n            }\r\n            \r\n            <button className=\"btn waves-effect waves-light\" onClick={()=>{\r\n                const items = document.getElementsByName('students');\r\n                let studentsArray = [];\r\n                for (var i = 0; i < items.length; i++) {\r\n                    if (items[i].type == 'checkbox' && items[i].checked == true)\r\n                        studentsArray.push(items[i].value);\r\n                }\r\n                fetch('/addstudents',{\r\n                    method:\"post\",\r\n                    headers:{\r\n                        \"authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                        \"Content-Type\":\"application/json\"\r\n                    },\r\n                    body:JSON.stringify({\r\n                        studentsArray,\r\n                        profileId:props.profileId\r\n                    })\r\n                }).then(res=>res.json())\r\n                .then(result=>{\r\n                    if(result.error){\r\n                        M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n                    }\r\n                    else{\r\n                        M.toast({html:\"Added students to class\",classes:\"#43a047 green darken-1\"})\r\n                        history.push('/')\r\n                    }\r\n                })\r\n            }}>Add Students\r\n                <i className=\"material-icons right\">add</i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Students;","import React,{useState,useContext,useEffect} from 'react';\r\nimport { useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../App';\r\nimport Students from './Students';\r\nimport M from 'materialize-css';\r\nconst Overview = () => {\r\n    const history=useHistory();\r\n    const {state,dispatch}=useContext(UserContext);\r\n    const profileId=history.location.pathname.substring(history.location.pathname.indexOf('/overview')+10);\r\n    const [id,setId]=useState(\"\");\r\n    const [name,setName]=useState(\"\");\r\n    const [subject,setSubject]=useState(\"\");\r\n    const [instructorName,setInstructorName]=useState(\"\");\r\n    const [fromTime,setFromTime]=useState(\"\");\r\n    const [toTime,setToTime]=useState(\"\");\r\n    const [noOfStudents,setNoOfStudents]=useState(0);\r\n    const [daysOfClass,setDaysOfClass]=useState([]);\r\n    const [showStudents,setShowStudents]=useState(false);\r\n    useEffect(()=>{\r\n        fetch('/getclass/'+profileId,{\r\n            method:\"get\",\r\n            headers:{\r\n                \"authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            if(result.error){\r\n                M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n            }\r\n            else{\r\n                result=result.class;\r\n                setId(result.id);\r\n                setName(result.name);\r\n                setSubject(result.subject);\r\n                setFromTime(result.fromTime);\r\n                setToTime(result.toTime);\r\n                setDaysOfClass(result.daysOfClass);\r\n                setInstructorName(result.instructorname);\r\n            }\r\n        })\r\n        fetch('/getCountOfStudents/'+profileId,{\r\n            method:\"get\",\r\n            headers:{\r\n                \"authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            if(result.error)\r\n                M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n            else    \r\n                setNoOfStudents(result.count);\r\n        })\r\n    },[]) \r\n    const deleteClick=()=>{\r\n        fetch('/deleteclass/'+profileId,{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            if(result.error)\r\n                M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n            else{\r\n                M.toast({html:result.message,classes:\"#43a047 green darken-1\"});\r\n                history.push('/');\r\n            }\r\n        })\r\n    }   \r\n    const editClassClicked=()=>{\r\n        history.push('/addclass/edit/'+profileId);\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 text-center\">\r\n                        <h3 style={{ textAlign: \"center\" }}>Overview</h3>\r\n                    </div>\r\n                </div>\r\n                <table className=\"highlight\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>ClassRoom Id</td>\r\n                            <td>{id}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ClassRoom Name</td>\r\n                            <td>{name}</td>\r\n                        </tr>\r\n                        {state?state.usertype==\"Student\"?\r\n                        <tr>\r\n                            <td>Instructor Name</td>\r\n                            <td>{instructorName}</td>\r\n                        </tr>\r\n                        :null:null}\r\n                        <tr>\r\n                            <td>Subject</td>\r\n                            <td>{subject}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Time of Class</td>\r\n                            <td>{fromTime} to {toTime}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Days of Class</td>\r\n                            <td>{daysOfClass?daysOfClass.map(items=>{return items+\" \";}):null}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>No. of Students</td>\r\n                            <td>{noOfStudents}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                {state?state.usertype!=\"Student\"?\r\n                <div className=\"row\" style={{marginTop:\"30px\"}}>\r\n                    <div className=\"col s4\">\r\n                        <button className=\"btn waves-effect waves-light\" onClick={editClassClicked}>Edit Class\r\n                            <i className=\"material-icons right\">create</i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col s4\">\r\n                        <button data-target=\"modal1\" className=\"btn\" onClick={()=>setShowStudents(true)}>Add Students<i className=\"material-icons right\">add</i></button>\r\n                    </div>\r\n                    <div className=\"col s4 rightAlign\">\r\n                        <button className=\"btn waves-effect waves-light\" onClick={deleteClick}>Delete\r\n                            <i className=\"material-icons right\">delete</i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                :\"\":\"\"}\r\n                {showStudents?<Students profileId={profileId}></Students>:null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Overview;","import React,{useState, useEffect,useContext, Fragment} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../App';\r\nimport M from 'materialize-css';\r\nconst Home = () => {\r\n    const {state,dispatch}=useContext(UserContext);\r\n    const [classes,setClasses]=useState([]);\r\n    const [nameSorted,setNameSorted]=useState(false);\r\n    const [subjectSorted,setSubjectSorted]=useState(false);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        fetch('/getclasses',{\r\n            headers:{\r\n                \"authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            if(result.error){\r\n                M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n            }\r\n            else{\r\n                setClasses(result.classes);\r\n            }\r\n        })\r\n    },[]);\r\n    const classClicked=(toLink)=>{\r\n        history.push(toLink)\r\n    }\r\n    const callSort=(sortBy)=>{\r\n        if(sortBy==\"name\"){\r\n            if(nameSorted){\r\n                console.log(classes);\r\n                setClasses(Array.from(classes.sort((a,b)=>a.name.toLowerCase().localeCompare(b.name.toLowerCase())).reverse()));\r\n                setNameSorted(!nameSorted);\r\n            }\r\n            else{\r\n                setClasses(Array.from(classes.sort((a,b)=>a.name.toLowerCase().localeCompare(b.name.toLowerCase()))));\r\n                setNameSorted(!nameSorted);\r\n            }\r\n        }\r\n        else{\r\n            let tempClasses=Array.from(classes.sort((a,b)=>a.subject.toLowerCase().localeCompare(b.subject.toLowerCase())));\r\n            if(subjectSorted){\r\n                setClasses(tempClasses.reverse());\r\n                setSubjectSorted(!subjectSorted);\r\n            }\r\n            else{\r\n                setClasses(tempClasses);\r\n                setSubjectSorted(!subjectSorted);\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 text-center\">\r\n                    <h3 style={{ textAlign: \"center\" }}>Home</h3>\r\n                </div>\r\n            </div>\r\n            {state?state.usertype!=\"Student\"?\r\n            <div className=\"row\">\r\n                <div className=\"col s10 rightAlign\">\r\n                    <Link to='/addclass'><button className=\"btn waves-effect waves-light float-right\" name=\"action\">Add Class\r\n                        <i className=\"material-icons right\">create</i>\r\n                    </button></Link>\r\n                </div>\r\n            </div>\r\n            :\"\":\"\"}\r\n            <div className=\"row\">\r\n                <div className=\"col m1\"></div>\r\n                <div className=\"col s12 m10\">\r\n                    <table className=\"highlight\" style={{ cursor: \"pointer\" }}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Index</th>\r\n                                <th onClick={()=>callSort(\"name\")}>Name<span><i className=\"material-icons material-icons-edit right\">arrow_drop_down</i></span></th>\r\n                                {state?state.usertype==\"Student\"?\r\n                                    <th>Instructor</th>\r\n                                :null:null}\r\n                                <th onClick={()=>callSort(\"subject\")}>Subject<span><i className=\"material-icons material-icons-edit right\">arrow_drop_down</i></span></th>\r\n                                <th>Time</th>\r\n                                <th>Days</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                classes.map((item,i)=>{\r\n                                    if(item!=null){\r\n                                        let toLink='/overview/'+item._id;\r\n                                        return (\r\n                                            <Fragment key={item._id}>\r\n                                                <tr onClick={()=>classClicked(toLink)}>\r\n                                                    <td>{i+1}</td>\r\n                                                    <td>{item.name}</td>\r\n                                                    {state?state.usertype==\"Student\"?\r\n                                                        <td>{item.instructorname}</td>\r\n                                                    :null:null}\r\n                                                    <td>{item.subject}</td>\r\n                                                    <td>{item.fromTime} to {item.toTime} </td>\r\n                                                    <td>{item.daysOfClass.map(items=>{return items+\" \";})}</td>\r\n                                                </tr>\r\n                                            </Fragment>                                   \r\n                                        )\r\n                                    }\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n                <div className=\"col m1\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n    if (action.type == 'USER')\r\n        return action.payload;\r\n    if (action.type == 'CLEAR')\r\n        return null;\r\n    return state;\r\n}","import React,{useState,useContext, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../App';\r\nimport M from 'materialize-css';\r\nconst AddClass=()=>{\r\n    const history=useHistory();\r\n    const [id,setId]=useState(\"\");\r\n    const [name,setName]=useState(\"\");\r\n    const [subject,setSubject]=useState(\"\");\r\n    const [fromTime,setFromTime]=useState(\"\");\r\n    const [toTime,setToTime]=useState(\"\");\r\n    const [daysOfClass,setDaysOfClass]=useState([]);\r\n    const [daysChange,setDaysChange]=useState(\"\");\r\n    const isEdit=history.location.pathname.indexOf('edit')!=-1;\r\n    const [classActive,setClassActive]=useState(\"\");\r\n    const addClick=()=>{   \r\n        const path=isEdit?\"/editclass\":\"/addclass\";  \r\n        fetch(path,{\r\n            method:\"post\",\r\n            headers:{\r\n                \"authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                id,name,subject,fromTime,toTime,daysOfClass\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            if(result.error)\r\n                M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n            else{\r\n                M.toast({html:isEdit?\"Class Edited\":\"Class added\",classes:\"#43a047 green darken-1\"});\r\n                history.push('/');\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        setDaysOfClass(daysChange.split(\",\").map(item => item.trim()));\r\n    },[daysChange])\r\n    const handleDaysChange=(e)=>{\r\n        setDaysChange(e.target.value);       \r\n    }\r\n    useEffect(()=>{\r\n        if(isEdit){\r\n            const classId=history.location.pathname.substring(history.location.pathname.indexOf('edit')+5);\r\n            fetch('/getclass/'+classId,{\r\n                method:\"get\",\r\n                headers:{\r\n                    \"authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                    \"Content-Type\":\"application/json\"\r\n                }\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.error){\r\n                    M.toast({html:result.error,classes:\"#c62727 red darken-3\"});\r\n                }\r\n                else{\r\n                    result=result.class;\r\n                    setId(result.id);\r\n                    setName(result.name);\r\n                    setSubject(result.subject);\r\n                    setFromTime(result.fromTime);\r\n                    setToTime(result.toTime);\r\n                    setDaysOfClass(result.daysOfClass);\r\n                    setDaysChange(result.daysOfClass.map(item=>item+\" \")+\"\");\r\n                    setClassActive(\"active\");\r\n                }\r\n            })\r\n        }\r\n    },[])\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"content\">\r\n            <form className=\"col s12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 text-center\">\r\n                                <h3 style={{ textAlign: \"center\" }}>{isEdit?\"Edit class\":\"Add Class\"}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <input id=\"id\" type=\"text\" value={id} className=\"validate\" onChange={(e) => setId(e.target.value)} disabled={isEdit}></input>\r\n                                <label className={classActive} htmlFor=\"id\">Id</label>\r\n                            </div>\r\n                            <div className=\"input-field col s6\">\r\n                                <input id=\"name\" type=\"text\" value={name} className=\"validate\" onChange={(e) => setName(e.target.value)}></input>\r\n                                <label className={classActive} htmlFor=\"name\">Name</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <input id=\"subject\" type=\"text\" value={subject} className=\"validate\" onChange={(e) => setSubject(e.target.value)}></input>\r\n                                <label className={classActive} htmlFor=\"subject\">Subject</label>\r\n                            </div>\r\n                            <div className=\"input-field col s6\">\r\n                                <input id=\"fromTime\" type=\"text\" value={fromTime} onChange={(e) => setFromTime(e.target.value)}></input>\r\n                                <label className={classActive} htmlFor=\"fromTime\">From Time</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s6\">\r\n                                <input id=\"toTime\" type=\"text\" value={toTime} onChange={(e) => setToTime(e.target.value)}></input>\r\n                                <label className={classActive} htmlFor=\"toTime\">To Time</label>\r\n                            </div>\r\n                            <div className=\"input-field col s6\">\r\n                                <input id=\"daysChange\" type=\"text\" value={daysChange} onChange={handleDaysChange}></input>\r\n                                <label className={classActive} htmlFor=\"daysChange\">Days of Class</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12 rightAlign\">\r\n                                <button className=\"btn waves-effect waves-light\" type=\"button\" onClick={addClick}>{isEdit?\"Edit\":\"Add Class\"}\r\n                                    <i className=\"material-icons right\">create</i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddClass;","import React, { useEffect, createContext, useReducer, useContext } from 'react';\nimport { BrowserRouter, Switch, Route, useHistory } from 'react-router-dom'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\nimport Profile from './components/Profile';\nimport Overview from './components/Overview';\nimport Home from './components/Home';\nimport { reducer, initialState } from './reducers/userReducer';\nimport AddClass from './components/AddClass';\nexport const UserContext = createContext();\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user })\n      history.push('/');\n    }\n    else {\n        history.push('/signin');\n    }\n  }, [])\n  return (\n    <Switch>\n      <Route exact path='/'><Home></Home></Route>\n      <Route path='/signin'><Signin></Signin></Route>\n      <Route path='/signup'><Signup></Signup></Route>\n      <Route path='/profile'><Profile></Profile></Route>\n      <Route path='/overview'><Overview></Overview></Route>\n      <Route path='/addclass'><AddClass></AddClass></Route>\n    </Switch>\n  )\n}\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      <UserContext.Provider value={{ state, dispatch }}>\n        <BrowserRouter>\n          <Navbar></Navbar>\n          <Routing></Routing>\n        </BrowserRouter>\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}